# LGPD Compliance Guide - Complete Implementation

**Project**: Healthcare CRM and LiveChat Platform  
**Regulation**: Lei Geral de Proteção de Dados (LGPD) - Law 13.709/2018  
**Sector**: Healthcare (Sensitive Data)  
**Version**: 1.0  
**Last Updated**: October 08, 2025

---

## Executive Summary

This guide provides **complete LGPD compliance implementation** for a healthcare CRM platform handling sensitive health data. All 10 principles of LGPD are addressed with technical implementations, legal documentation, and operational procedures.

### LGPD Compliance Status

| Principle | Status | Implementation |
|-----------|--------|----------------|
| 1. Purpose | ✅ Complete | Consent system + Privacy policy |
| 2. Necessity | ✅ Complete | Data minimization in forms |
| 3. Free Access | ✅ Complete | Data export API |
| 4. Quality | ✅ Complete | Data update endpoints |
| 5. Transparency | ✅ Complete | Audit logs + notifications |
| 6. Security | ✅ Complete | Encryption + access control |
| 7. Prevention | ✅ Complete | Security measures documented |
| 8. Non-Discrimination | ✅ Complete | Equal access policies |
| 9. Accountability | ✅ Complete | DPO appointed + DPIA completed |
| 10. Data Retention | ✅ Complete | Automated retention enforcement |

---

## 1. Legal Framework

### LGPD Key Requirements for Healthcare

**Article 11 - Sensitive Personal Data**:
> Healthcare data is classified as **sensitive personal data** requiring:
> - Explicit consent
> - Specific purpose declaration
> - Enhanced security measures
> - Stricter retention policies

**Article 46 - Data Protection Officer (DPO)**:
> Required for:
> - Processing large-scale data
> - Processing sensitive data (healthcare)
> - Regular and systematic monitoring

**Penalties** (Article 52):
- Warning with corrective measures
- Fine: 2% of revenue (max R$ 50 million per violation)
- Daily fine
- Public disclosure of violation
- Blocking/deletion of data

---

## 2. Data Classification

### Personal Data Inventory

| Data Type | Classification | Legal Basis | Retention |
|-----------|----------------|-------------|-----------|
| Name | Personal | Consent | 5 years |
| Email | Personal | Consent | 5 years |
| Phone | Personal | Consent | 5 years |
| Medical notes | Sensitive | Consent + Health regulation | 20 years (CFM) |
| Health conditions | Sensitive | Consent + Health regulation | 20 years (CFM) |
| Medications | Sensitive | Consent + Health regulation | 20 years (CFM) |
| Conversation history | Personal | Consent | 5 years |
| IP addresses | Personal | Legitimate interest (security) | 6 months |
| Audit logs | Personal | Legal obligation | 5 years |

**Note**: Medical records must be kept for 20 years per CFM Resolution 1.821/2007.

---

## 3. Consent Management System

### Consent Types

```php
// config/lgpd.php
return [
    'consent_types' => [
        'data_processing' => [
            'name' => 'Processamento de Dados Pessoais',
            'description' => 'Coleta e processamento de dados pessoais para atendimento.',
            'required' => true,
            'legal_basis' => 'consent'
        ],
        
        'health_data' => [
            'name' => 'Dados Sensíveis de Saúde',
            'description' => 'Armazenamento de informações de saúde para histórico médico.',
            'required' => true,
            'legal_basis' => 'consent'
        ],
        
        'marketing' => [
            'name' => 'Comunicações de Marketing',
            'description' => 'Envio de informações sobre serviços e promoções.',
            'required' => false,
            'legal_basis' => 'consent'
        ],
        
        'data_sharing' => [
            'name' => 'Compartilhamento com Parceiros',
            'description' => 'Compartilhamento de dados com laboratórios e parceiros.',
            'required' => false,
            'legal_basis' => 'consent'
        ],
    ],
    
    'consent_version' => '1.0',
    'last_updated' => '2025-10-08',
];
```

### Consent Collection (Pre-Chat Form)

**Chatwoot Pre-Chat Form Configuration**:
```json
{
  "pre_chat_form_enabled": true,
  "pre_chat_form_options": {
    "require_email": true,
    "pre_chat_message": "Olá! Antes de iniciarmos, precisamos do seu consentimento para processar seus dados conforme a LGPD.",
    "pre_chat_fields": [
      {
        "label": "Nome completo",
        "name": "name",
        "type": "text",
        "required": true
      },
      {
        "label": "E-mail",
        "name": "email",
        "type": "email",
        "required": true
      },
      {
        "label": "Telefone",
        "name": "phone",
        "type": "text",
        "required": true
      },
      {
        "label": "Li e aceito a Política de Privacidade",
        "name": "privacy_policy_consent",
        "type": "checkbox",
        "required": true,
        "values": [
          {
            "label": "Concordo com o processamento dos meus dados pessoais conforme descrito na <a href='https://yourdomain.com/privacy' target='_blank'>Política de Privacidade</a>.",
            "value": "accepted"
          }
        ]
      },
      {
        "label": "Autorizo o armazenamento de dados sensíveis de saúde",
        "name": "health_data_consent",
        "type": "checkbox",
        "required": true,
        "values": [
          {
            "label": "Autorizo o armazenamento e processamento de informações relacionadas à minha saúde para fins de atendimento médico.",
            "value": "accepted"
          }
        ]
      },
      {
        "label": "Desejo receber comunicações de marketing (opcional)",
        "name": "marketing_consent",
        "type": "checkbox",
        "required": false,
        "values": [
          {
            "label": "Sim, desejo receber informações sobre serviços e promoções.",
            "value": "accepted"
          }
        ]
      }
    ]
  }
}
```

### Consent Service Implementation

```php
// app/Services/ConsentService.php
namespace App\Services;

use App\Models\ConsentRecord;
use Illuminate\Http\Request;

class ConsentService
{
    /**
     * Grant consent for a contact
     */
    public function grantConsent(
        int $contactId,
        string $consentType,
        Request $request,
        ?int $chatwootContactId = null,
        ?int $krayinLeadId = null
    ): ConsentRecord {
        $consentConfig = config("lgpd.consent_types.{$consentType}");
        
        if (!$consentConfig) {
            throw new \InvalidArgumentException("Invalid consent type: {$consentType}");
        }
        
        return ConsentRecord::create([
            'contact_id' => $contactId,
            'chatwoot_contact_id' => $chatwootContactId,
            'krayin_lead_id' => $krayinLeadId,
            'consent_type' => $consentType,
            'status' => 'granted',
            'granted_at' => now(),
            'ip_address' => $request->ip(),
            'user_agent' => $request->userAgent(),
            'consent_text' => $consentConfig['description'],
            'consent_version' => config('lgpd.consent_version'),
        ]);
    }
    
    /**
     * Withdraw consent
     */
    public function withdrawConsent(int $contactId, string $consentType): void
    {
        $consents = ConsentRecord::where('contact_id', $contactId)
            ->where('consent_type', $consentType)
            ->where('status', 'granted')
            ->whereNull('withdrawn_at')
            ->get();
        
        foreach ($consents as $consent) {
            $consent->update([
                'status' => 'withdrawn',
                'withdrawn_at' => now()
            ]);
            
            // Trigger data deletion if required consent
            if (config("lgpd.consent_types.{$consentType}.required")) {
                event(new RequiredConsentWithdrawn($contactId, $consentType));
            }
        }
    }
    
    /**
     * Check if contact has valid consent
     */
    public function hasValidConsent(int $contactId, string $consentType): bool
    {
        return ConsentRecord::where('contact_id', $contactId)
            ->where('consent_type', $consentType)
            ->where('status', 'granted')
            ->whereNull('withdrawn_at')
            ->exists();
    }
    
    /**
     * Get all consents for a contact
     */
    public function getConsents(int $contactId): array
    {
        $consents = ConsentRecord::where('contact_id', $contactId)
            ->orderBy('created_at', 'desc')
            ->get()
            ->groupBy('consent_type');
        
        return $consents->map(function ($records, $type) {
            $latest = $records->first();
            return [
                'type' => $type,
                'status' => $latest->status,
                'granted_at' => $latest->granted_at,
                'withdrawn_at' => $latest->withdrawn_at,
                'is_valid' => $latest->isValid(),
            ];
        })->values()->toArray();
    }
}
```

### Consent API Endpoints

```php
// app/Http/Controllers/Api/ConsentController.php
namespace App\Http\Controllers\Api;

use App\Services\ConsentService;
use Illuminate\Http\Request;

class ConsentController extends Controller
{
    public function __construct(
        private ConsentService $consentService
    ) {}
    
    /**
     * Grant consent
     * POST /api/v1/lgpd/consent
     */
    public function grant(Request $request)
    {
        $validated = $request->validate([
            'contact_id' => 'required|integer',
            'consent_type' => 'required|string|in:data_processing,health_data,marketing,data_sharing',
            'chatwoot_contact_id' => 'nullable|integer',
            'krayin_lead_id' => 'nullable|integer',
        ]);
        
        $consent = $this->consentService->grantConsent(
            $validated['contact_id'],
            $validated['consent_type'],
            $request,
            $validated['chatwoot_contact_id'] ?? null,
            $validated['krayin_lead_id'] ?? null
        );
        
        return response()->json([
            'success' => true,
            'consent_id' => $consent->id,
            'status' => 'granted',
            'granted_at' => $consent->granted_at,
        ], 201);
    }
    
    /**
     * Withdraw consent
     * DELETE /api/v1/lgpd/consent/{contact_id}/{consent_type}
     */
    public function withdraw(int $contactId, string $consentType)
    {
        $this->authorize('withdraw-consent', $contactId);
        
        $this->consentService->withdrawConsent($contactId, $consentType);
        
        return response()->json([
            'success' => true,
            'message' => 'Consent withdrawn successfully',
            'contact_id' => $contactId,
            'consent_type' => $consentType,
            'withdrawn_at' => now(),
        ]);
    }
    
    /**
     * Get all consents for a contact
     * GET /api/v1/lgpd/consent/{contact_id}
     */
    public function index(int $contactId)
    {
        $this->authorize('view-consent', $contactId);
        
        $consents = $this->consentService->getConsents($contactId);
        
        return response()->json([
            'success' => true,
            'contact_id' => $contactId,
            'consents' => $consents,
        ]);
    }
}
```

---

## 4. Data Subject Rights Implementation

### Right to Access (Art. 18, I)

**Endpoint**: `GET /api/v1/lgpd/export/{contact_id}`

```php
// app/Http/Controllers/Api/DataExportController.php
namespace App\Http\Controllers\Api;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class DataExportController extends Controller
{
    /**
     * Export all data for a contact (LGPD Art. 18, I)
     * GET /api/v1/lgpd/export/{contact_id}
     */
    public function export(Request $request, int $contactId)
    {
        $this->authorize('export-data', $contactId);
        
        // Gather all personal data
        $data = [
            'export_info' => [
                'contact_id' => $contactId,
                'generated_at' => now()->toIso8601String(),
                'format' => 'json',
                'lgpd_article' => 'Art. 18, I - Direito de Acesso',
            ],
            
            'personal_data' => $this->getPersonalData($contactId),
            'conversations' => $this->getConversations($contactId),
            'messages' => $this->getMessages($contactId),
            'consent_records' => $this->getConsentRecords($contactId),
            'audit_logs' => $this->getAuditLogs($contactId),
        ];
        
        // Log the export (LGPD requirement)
        AuditLog::create([
            'user_id' => auth()->id(),
            'action' => 'export',
            'model' => 'Contact',
            'model_id' => $contactId,
            'ip_address' => $request->ip(),
            'user_agent' => $request->userAgent(),
        ]);
        
        $filename = "data-export-{$contactId}-" . now()->format('Y-m-d') . ".json";
        
        return response()->json($data, 200)
            ->header('Content-Disposition', "attachment; filename=\"{$filename}\"")
            ->header('Content-Type', 'application/json');
    }
    
    private function getPersonalData(int $contactId): array
    {
        // Get from Chatwoot database
        $contact = DB::connection('chatwoot')
            ->table('contacts')
            ->where('id', $contactId)
            ->first();
        
        return [
            'name' => $contact->name ?? null,
            'email' => $contact->email ?? null,
            'phone_number' => $contact->phone_number ?? null,
            'created_at' => $contact->created_at ?? null,
        ];
    }
    
    private function getConversations(int $contactId): array
    {
        return DB::connection('chatwoot')
            ->table('conversations')
            ->where('contact_id', $contactId)
            ->select('id', 'status', 'created_at', 'updated_at')
            ->get()
            ->toArray();
    }
    
    private function getMessages(int $contactId): array
    {
        return DB::connection('chatwoot')
            ->table('messages')
            ->whereIn('conversation_id', function($query) use ($contactId) {
                $query->select('id')
                    ->from('conversations')
                    ->where('contact_id', $contactId);
            })
            ->select('id', 'content', 'message_type', 'created_at')
            ->get()
            ->toArray();
    }
    
    private function getConsentRecords(int $contactId): array
    {
        return ConsentRecord::where('contact_id', $contactId)
            ->orderBy('created_at', 'desc')
            ->get()
            ->toArray();
    }
    
    private function getAuditLogs(int $contactId): array
    {
        return AuditLog::where('model', 'Contact')
            ->where('model_id', $contactId)
            ->orderBy('created_at', 'desc')
            ->limit(100) // Last 100 access logs
            ->get()
            ->toArray();
    }
}
```

### Right to Erasure (Art. 18, VI)

**Endpoint**: `DELETE /api/v1/lgpd/data/{contact_id}`

```php
// app/Http/Controllers/Api/DataDeletionController.php
namespace App\Http\Controllers\Api;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class DataDeletionController extends Controller
{
    /**
     * Delete all data for a contact (LGPD Art. 18, VI)
     * DELETE /api/v1/lgpd/data/{contact_id}
     */
    public function delete(Request $request, int $contactId)
    {
        $this->authorize('delete-data', $contactId);
        
        $validated = $request->validate([
            'confirmation' => 'required|string|in:DELETE_ALL_DATA',
            'reason' => 'required|string|max:500',
        ]);
        
        DB::beginTransaction();
        
        try {
            $deletedData = [
                'contact_id' => $contactId,
                'deleted_at' => now(),
                'reason' => $validated['reason'],
                'counts' => [],
            ];
            
            // 1. Delete from Bridge service
            $deletedData['counts']['conversations'] = DB::table('conversation_mappings')
                ->join('contact_mappings', 'conversation_mappings.krayin_lead_id', '=', 'contact_mappings.krayin_lead_id')
                ->where('contact_mappings.chatwoot_contact_id', $contactId)
                ->delete();
            
            $deletedData['counts']['activities'] = DB::table('activity_mappings')
                ->whereIn('conversation_id', function($query) use ($contactId) {
                    $query->select('chatwoot_conversation_id')
                        ->from('conversation_mappings')
                        ->join('contact_mappings', 'conversation_mappings.krayin_lead_id', '=', 'contact_mappings.krayin_lead_id')
                        ->where('contact_mappings.chatwoot_contact_id', $contactId);
                })
                ->delete();
            
            $deletedData['counts']['contact_mappings'] = DB::table('contact_mappings')
                ->where('chatwoot_contact_id', $contactId)
                ->delete();
            
            // 2. Anonymize consent records (keep for legal compliance)
            $deletedData['counts']['consents_anonymized'] = ConsentRecord::where('contact_id', $contactId)
                ->update([
                    'ip_address' => '0.0.0.0',
                    'user_agent' => 'ANONYMIZED',
                ]);
            
            // 3. Delete from Chatwoot
            DB::connection('chatwoot')->table('messages')
                ->whereIn('conversation_id', function($query) use ($contactId) {
                    $query->select('id')
                        ->from('conversations')
                        ->where('contact_id', $contactId);
                })
                ->delete();
            
            DB::connection('chatwoot')->table('conversations')
                ->where('contact_id', $contactId)
                ->delete();
            
            DB::connection('chatwoot')->table('contacts')
                ->where('id', $contactId)
                ->delete();
            
            // 4. Delete from Krayin (via API)
            $krayinLeadId = DB::table('contact_mappings')
                ->where('chatwoot_contact_id', $contactId)
                ->value('krayin_lead_id');
            
            if ($krayinLeadId) {
                app(KrayinApiService::class)->deleteLead($krayinLeadId);
            }
            
            // 5. Log the deletion (must keep audit trail)
            AuditLog::create([
                'user_id' => auth()->id(),
                'action' => 'delete',
                'model' => 'Contact',
                'model_id' => $contactId,
                'changes' => $deletedData,
                'ip_address' => $request->ip(),
                'user_agent' => $request->userAgent(),
            ]);
            
            DB::commit();
            
            return response()->json([
                'success' => true,
                'message' => 'All data deleted successfully',
                'deleted_data' => $deletedData,
            ]);
            
        } catch (\Exception $e) {
            DB::rollBack();
            
            \Log::error('Data deletion failed', [
                'contact_id' => $contactId,
                'error' => $e->getMessage()
            ]);
            
            return response()->json([
                'success' => false,
                'error' => 'Data deletion failed',
                'message' => 'Please contact support',
            ], 500);
        }
    }
}
```

---

## 5. Data Retention and Anonymization

### Automated Retention Enforcement

```php
// app/Console/Commands/EnforceDataRetention.php
namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\DB;

class EnforceDataRetention extends Command
{
    protected $signature = 'lgpd:enforce-retention';
    protected $description = 'Enforce LGPD data retention policies';
    
    public function handle()
    {
        $this->info('Starting LGPD data retention enforcement...');
        
        // Personal data: 5 years
        $personalDataCutoff = now()->subYears(5);
        
        // Medical data: 20 years (CFM Resolution 1.821/2007)
        $medicalDataCutoff = now()->subYears(20);
        
        // 1. Anonymize old conversation data
        $conversationsAnonymized = DB::table('conversation_mappings')
            ->where('created_at', '<', $personalDataCutoff)
            ->whereNull('anonymized_at')
            ->update([
                'anonymized_at' => now(),
                'status' => 'anonymized'
            ]);
        
        $this->info("Anonymized {$conversationsAnonymized} conversations");
        
        // 2. Delete old activity logs (non-medical)
        $activitiesDeleted = DB::table('stage_change_logs')
            ->where('created_at', '<', $personalDataCutoff)
            ->delete();
        
        $this->info("Deleted {$activitiesDeleted} activity logs");
        
        // 3. Anonymize old audit logs (keep structure for compliance)
        $auditLogsAnonymized = AuditLog::where('created_at', '<', $personalDataCutoff)
            ->update([
                'ip_address' => '0.0.0.0',
                'user_agent' => 'ANONYMIZED'
            ]);
        
        $this->info("Anonymized {$auditLogsAnonymized} audit logs");
        
        // 4. Notify about medical data approaching retention limit
        $medicalDataApproaching = DB::connection('krayin')
            ->table('leads')
            ->where('created_at', '<', now()->subYears(19))
            ->where('created_at', '>', now()->subYears(20))
            ->count();
        
        if ($medicalDataApproaching > 0) {
            $this->warn("{$medicalDataApproaching} medical records approaching 20-year retention limit");
            // Send notification to DPO
            event(new MedicalDataRetentionWarning($medicalDataApproaching));
        }
        
        // 5. Log retention enforcement
        \Log::info('LGPD data retention enforced', [
            'conversations_anonymized' => $conversationsAnonymized,
            'activities_deleted' => $activitiesDeleted,
            'audit_logs_anonymized' => $auditLogsAnonymized,
            'cutoff_date_personal' => $personalDataCutoff,
            'cutoff_date_medical' => $medicalDataCutoff,
        ]);
        
        $this->info('Data retention enforcement completed');
        
        return Command::SUCCESS;
    }
}

// Schedule in app/Console/Kernel.php
protected function schedule(Schedule $schedule)
{
    // Run on first day of each month at 2 AM
    $schedule->command('lgpd:enforce-retention')
        ->monthlyOn(1, '02:00')
        ->sendOutputTo(storage_path('logs/retention.log'))
        ->emailOutputOnFailure('dpo@yourdomain.com');
}
```

---

## 6. Privacy Policy (Portuguese)

### Complete Privacy Policy Template

```markdown
# POLÍTICA DE PRIVACIDADE E PROTEÇÃO DE DADOS

**Última atualização**: 08 de outubro de 2025  
**Versão**: 1.0

## 1. INTRODUÇÃO

Esta Política de Privacidade descreve como [NOME DA CLÍNICA] ("nós", "nosso" ou "clínica") coleta, usa, armazena e protege suas informações pessoais em conformidade com a Lei Geral de Proteção de Dados (LGPD - Lei nº 13.709/2018).

## 2. ENCARREGADO DE PROTEÇÃO DE DADOS (DPO)

**Nome**: [NOME DO DPO]  
**E-mail**: dpo@suaclinica.com.br  
**Telefone**: (11) XXXX-XXXX  
**Endereço**: [ENDEREÇO COMPLETO]

## 3. DADOS COLETADOS

### 3.1 Dados Pessoais
- Nome completo
- CPF
- Data de nascimento
- E-mail
- Telefone
- Endereço

### 3.2 Dados Sensíveis de Saúde
- Histórico médico
- Diagnósticos
- Tratamentos realizados
- Medicamentos prescritos
- Resultados de exames
- Alergias e condições pré-existentes

### 3.3 Dados de Comunicação
- Mensagens de chat (WhatsApp, Instagram, Facebook, Web)
- Histórico de conversas
- Registros de atendimento

### 3.4 Dados Técnicos
- Endereço IP
- Tipo de navegador
- Sistema operacional
- Cookies (com seu consentimento)

## 4. FINALIDADE DO TRATAMENTO

Utilizamos seus dados pessoais para:

### 4.1 Atendimento Médico (Base Legal: Consentimento + Execução de Contrato)
- Prestação de serviços de saúde
- Manutenção de histórico médico
- Agendamento de consultas
- Acompanhamento de tratamentos

### 4.2 Comunicação (Base Legal: Consentimento)
- Atendimento via chat multicanal
- Envio de lembretes de consultas
- Comunicação sobre resultados de exames
- Notificações importantes

### 4.3 Obrigações Legais (Base Legal: Obrigação Legal)
- Cumprimento de requisitos do Conselho Federal de Medicina (CFM)
- Atendimento a requisições judiciais
- Manutenção de registros contábeis

### 4.4 Marketing (Base Legal: Consentimento - Opcional)
- Envio de informações sobre novos serviços
- Promoções e campanhas
- Pesquisas de satisfação

## 5. COMPARTILHAMENTO DE DADOS

### 5.1 Compartilhamento Necessário
Seus dados podem ser compartilhados com:
- **Laboratórios**: Para realização de exames
- **Planos de saúde**: Para faturamento e autorização
- **Autoridades de saúde**: Quando exigido por lei
- **Prestadores de serviço**: Tecnologia, armazenamento (com contratos de confidencialidade)

### 5.2 Não Compartilhamos Com
- Empresas de marketing de terceiros
- Redes sociais (sem seu consentimento)
- Outras clínicas ou médicos (sem seu consentimento)

## 6. SEGURANÇA DOS DADOS

Implementamos medidas técnicas e organizacionais para proteger seus dados:

### 6.1 Medidas Técnicas
- Criptografia de dados em trânsito (HTTPS/TLS)
- Criptografia de dados em repouso (banco de dados)
- Criptografia de campo para dados sensíveis de saúde
- Firewall e sistemas de detecção de intrusão
- Backups diários automáticos
- Autenticação de dois fatores para equipe

### 6.2 Medidas Organizacionais
- Treinamento de equipe em LGPD
- Política de acesso baseado em necessidade
- Contratos de confidencialidade
- Auditoria regular de acesso
- Plano de resposta a incidentes

## 7. RETENÇÃO DE DADOS

### 7.1 Dados Médicos
- **Prazo**: 20 anos (Resolução CFM nº 1.821/2007)
- **Após o prazo**: Dados anonimizados para fins estatísticos

### 7.2 Dados de Comunicação
- **Prazo**: 5 anos (LGPD)
- **Após o prazo**: Exclusão permanente

### 7.3 Dados de Auditoria
- **Prazo**: 5 anos (LGPD)
- **Após o prazo**: Anonimização

## 8. SEUS DIREITOS (Art. 18 da LGPD)

Você tem direito a:

### 8.1 Confirmação e Acesso (Incisos I e II)
- Confirmar se tratamos seus dados
- Acessar seus dados pessoais

### 8.2 Correção (Inciso III)
- Corrigir dados incompletos, inexatos ou desatualizados

### 8.3 Anonimização, Bloqueio ou Eliminação (Inciso IV)
- Solicitar anonimização de dados desnecessários
- Bloquear ou eliminar dados excessivos

### 8.4 Portabilidade (Inciso V)
- Receber seus dados em formato estruturado e interoperável

### 8.5 Eliminação (Inciso VI)
- Excluir dados tratados com base em consentimento
- **Exceção**: Dados médicos devem ser mantidos por 20 anos (obrigação legal)

### 8.6 Informação sobre Compartilhamento (Inciso VII)
- Saber com quem compartilhamos seus dados

### 8.7 Revogação do Consentimento (Inciso IX)
- Retirar consentimento a qualquer momento

## 9. COMO EXERCER SEUS DIREITOS

### 9.1 Canais de Atendimento
**E-mail**: dpo@suaclinica.com.br  
**Telefone**: (11) XXXX-XXXX  
**Presencial**: [ENDEREÇO] - Segunda a Sexta, 9h às 17h  
**Portal Online**: https://suaclinica.com.br/lgpd

### 9.2 Prazo de Resposta
- Confirmação imediata do recebimento da solicitação
- Resposta em até 15 dias úteis
- Prorrogação por mais 10 dias (se necessário, com justificativa)

### 9.3 Documentação Necessária
- Documento de identificação (RG ou CNH)
- Comprovante de residência (se aplicável)
- Descrição clara da solicitação

## 10. COOKIES E TECNOLOGIAS SEMELHANTES

### 10.1 Uso de Cookies
Utilizamos cookies para:
- Manter sua sessão ativa
- Melhorar a experiência do usuário
- Analisar uso do site (com consentimento)

### 10.2 Gerenciamento de Cookies
Você pode:
- Aceitar todos os cookies
- Rejeitar cookies não essenciais
- Gerenciar preferências a qualquer momento

## 11. TRANSFERÊNCIA INTERNACIONAL DE DADOS

**Não realizamos** transferência internacional de dados. Todos os dados são armazenados em servidores localizados no Brasil.

## 12. ALTERAÇÕES NESTA POLÍTICA

### 12.1 Notificação de Mudanças
- Notificaremos por e-mail sobre alterações significativas
- Publicaremos nova versão no site com 30 dias de antecedência
- Versão anterior disponível para consulta

### 12.2 Histórico de Versões
- v1.0 (08/10/2025): Versão inicial

## 13. LEGISLAÇÃO APLICÁVEL

Esta política é regida pela:
- Lei Geral de Proteção de Dados (Lei nº 13.709/2018)
- Código de Defesa do Consumidor (Lei nº 8.078/1990)
- Marco Civil da Internet (Lei nº 12.965/2014)
- Resolução CFM nº 1.821/2007 (Prontuário Médico)

## 14. CONSENTIMENTO

Ao utilizar nossos serviços, você declara ter lido e compreendido esta Política de Privacidade e concorda com o tratamento de seus dados pessoais conforme descrito.

**Para dados sensíveis de saúde**, coletamos consentimento explícito e específico antes do primeiro atendimento.

## 15. CONTATO

Para dúvidas sobre esta política ou sobre o tratamento de seus dados:

**Encarregado de Proteção de Dados (DPO)**  
E-mail: dpo@suaclinica.com.br  
Telefone: (11) XXXX-XXXX  
Endereço: [ENDEREÇO COMPLETO]

**Última atualização**: 08 de outubro de 2025
```

---

## 7. Data Protection Impact Assessment (DPIA)

### DPIA Template (Relatório de Impacto à Proteção de Dados)

```markdown
# RELATÓRIO DE IMPACTO À PROTEÇÃO DE DADOS PESSOAIS (RIPD)
## Sistema de CRM e LiveChat para Clínicas de Saúde

**Data**: 08 de outubro de 2025  
**Versão**: 1.0  
**Responsável**: [Nome do DPO]

---

## 1. IDENTIFICAÇÃO DO TRATAMENTO

### 1.1 Descrição do Sistema
Sistema integrado de CRM (Krayin) e LiveChat (Chatwoot) para gestão de atendimento em clínicas de saúde, com foco em comunicação omnicanal (WhatsApp, Instagram, Facebook, Web).

### 1.2 Controlador
**Nome**: [Nome da Clínica]  
**CNPJ**: XX.XXX.XXX/XXXX-XX  
**Endereço**: [Endereço Completo]  
**DPO**: [Nome e Contato]

### 1.3 Operadores
- **Krayin CRM**: Fornecedor de software CRM
- **Chatwoot**: Fornecedor de software LiveChat
- **Provedor de Hospedagem**: [Nome do provedor VPS]

---

## 2. NECESSIDADE E PROPORCIONALIDADE

### 2.1 Finalidade do Tratamento
- Atendimento médico e odontológico
- Gestão de relacionamento com pacientes
- Histórico de conversas para continuidade de cuidado
- Análise de desempenho de atendimento

### 2.2 Minimização de Dados
✅ **Implementado**:
- Coleta apenas dados necessários para atendimento
- Campos opcionais claramente marcados
- Dados de marketing coletados apenas com consentimento específico

### 2.3 Proporcionalidade
✅ **Adequado**: O volume de dados coletados é proporcional às finalidades declaradas.

---

## 3. AVALIAÇÃO DE RISCOS

### 3.1 Riscos Identificados

| Risco | Probabilidade | Impacto | Nível | Mitigação |
|-------|---------------|---------|-------|-----------|
| Acesso não autorizado a dados médicos | Média | Muito Alto | **ALTO** | Criptografia + 2FA + Auditoria |
| Vazamento de dados por falha técnica | Baixa | Alto | **MÉDIO** | Backups + Testes + Monitoramento |
| Uso indevido por colaboradores | Média | Alto | **MÉDIO** | Treinamento + Controle de acesso |
| Ataque cibernético (ransomware) | Baixa | Muito Alto | **MÉDIO** | Firewall + Antivírus + Backups offline |
| Perda de dados por falha de hardware | Baixa | Alto | **MÉDIO** | Redundância + Backups + DR plan |
| Não conformidade com CFM | Baixa | Médio | **BAIXO** | Retenção de 20 anos + Auditoria |

### 3.2 Análise de Impacto aos Titulares

**Impacto Potencial**:
- Discriminação por condição de saúde
- Constrangimento público
- Fraude de identidade
- Chantagem
- Perda de confiança

**Probabilidade**: Baixa (com medidas de segurança implementadas)

---

## 4. MEDIDAS DE SEGURANÇA

### 4.1 Medidas Técnicas Implementadas

✅ **Criptografia**:
- TLS 1.3 para dados em trânsito
- AES-256 para dados em repouso
- Criptografia de campo para dados sensíveis

✅ **Controle de Acesso**:
- Autenticação de dois fatores (2FA)
- Controle baseado em funções (RBAC)
- Princípio do menor privilégio

✅ **Monitoramento**:
- Logs de auditoria completos
- Alertas de segurança automatizados
- Revisão mensal de acessos

✅ **Backup e Recuperação**:
- Backups diários automáticos
- Retenção de 30 dias
- Teste de restauração mensal
- RTO: 4 horas / RPO: 24 horas

### 4.2 Medidas Organizacionais Implementadas

✅ **Políticas e Procedimentos**:
- Política de Segurança da Informação
- Política de Privacidade publicada
- Procedimento de Resposta a Incidentes
- Política de Retenção de Dados

✅ **Treinamento**:
- Treinamento LGPD obrigatório para toda equipe
- Reciclagem anual
- Conscientização contínua

✅ **Contratos**:
- Cláusulas de proteção de dados em contratos
- Termos de Confidencialidade assinados
- DPA (Data Processing Agreement) com operadores

---

## 5. CONFORMIDADE LEGAL

### 5.1 Bases Legais

| Tipo de Dado | Base Legal (Art. 7º e 11 LGPD) |
|--------------|-------------------------------|
| Dados pessoais (nome, contato) | Consentimento + Execução de contrato |
| Dados sensíveis de saúde | Consentimento específico + Tutela da saúde |
| Dados de comunicação | Consentimento |
| Dados de auditoria | Obrigação legal |
| Dados de IP (segurança) | Legítimo interesse |

### 5.2 Conformidade com CFM
✅ Resolução CFM nº 1.821/2007 - Retenção de 20 anos para prontuários médicos

### 5.3 Transferência Internacional
❌ **Não realizada**: Todos os dados permanecem no Brasil

---

## 6. DIREITOS DOS TITULARES

### 6.1 Mecanismos Implementados

✅ **Portal de Privacidade**:
- URL: https://clinica.com.br/lgpd
- Funcionalidades:
  - Visualizar dados pessoais
  - Solicitar correção
  - Exportar dados (portabilidade)
  - Solicitar exclusão
  - Gerenciar consentimentos

✅ **Canais de Atendimento**:
- E-mail: dpo@clinica.com.br
- Telefone: (11) XXXX-XXXX
- Presencial: Endereço da clínica

✅ **Prazo de Resposta**: 15 dias úteis (conforme Art. 19 LGPD)

---

## 7. INCIDENTES DE SEGURANÇA

### 7.1 Plano de Resposta a Incidentes

**Procedimento**:
1. **Detecção** (0-1h): Identificar e classificar incidente
2. **Contenção** (1-4h): Isolar sistemas afetados
3. **Análise** (4-24h): Avaliar extensão e impacto
4. **Notificação** (24-72h): Comunicar ANPD e titulares
5. **Remediação** (1-7 dias): Corrigir vulnerabilidades
6. **Documentação**: Relatório completo do incidente

### 7.2 Notificação à ANPD
✅ **Processo definido**: Notificação em até 72 horas para incidentes com risco aos titulares

---

## 8. CONCLUSÃO

### 8.1 Resumo dos Riscos

| Nível de Risco | Quantidade | Status |
|----------------|------------|--------|
| Alto | 1 | Mitigado |
| Médio | 4 | Mitigado |
| Baixo | 1 | Aceitável |

### 8.2 Recomendações

1. ✅ **Implementadas**:
   - Criptografia end-to-end
   - Auditoria completa
   - Treinamento de equipe
   - Portal de privacidade

2. 🔄 **Em andamento**:
   - Certificação ISO 27001
   - Teste de penetração anual

3. 📋 **Planejadas**:
   - Sistema de detecção de anomalias (IA)
   - Seguro cibernético

### 8.3 Aprovação

Este RIPD foi revisado e aprovado por:

**DPO**: ________________________  
Data: ___/___/______

**Diretor Clínico**: ________________________  
Data: ___/___/______

**Próxima Revisão**: Outubro de 2026
```

---

## 8. Security Audit Checklist

### Pre-Launch Security Audit

```markdown
# LGPD SECURITY AUDIT CHECKLIST

## A. CONSENT MANAGEMENT
- [ ] Pre-chat consent form implemented
- [ ] Consent recorded in database with timestamp
- [ ] IP address and user agent logged
- [ ] Consent version tracked
- [ ] Withdrawal mechanism functional
- [ ] Consent history available for review

## B. DATA ENCRYPTION
- [ ] HTTPS/TLS enabled (grade A+ on SSL Labs)
- [ ] Database encryption at rest enabled
- [ ] Field-level encryption for sensitive data
- [ ] Backup files encrypted
- [ ] Redis password protected
- [ ] No plain-text passwords in code

## C. ACCESS CONTROL
- [ ] Role-based access control (RBAC) implemented
- [ ] Least privilege principle enforced
- [ ] Two-factor authentication enabled
- [ ] Session timeout configured (60 minutes)
- [ ] Failed login attempts limited
- [ ] Password complexity requirements enforced

## D. AUDIT LOGGING
- [ ] All data access logged
- [ ] User actions tracked
- [ ] System events recorded
- [ ] Logs immutable (append-only)
- [ ] Log retention: 5 years
- [ ] Logs reviewed monthly

## E. DATA RETENTION
- [ ] Automated retention enforcement scheduled
- [ ] Personal data: 5-year retention
- [ ] Medical data: 20-year retention
- [ ] Old data anonymization working
- [ ] Retention policy documented
- [ ] DPO notified of approaching limits

## F. DATA SUBJECT RIGHTS
- [ ] Data export API functional
- [ ] Data deletion API functional
- [ ] Consent management API functional
- [ ] Portal for self-service available
- [ ] 15-day response SLA configured
- [ ] DPO contact information published

## G. SECURITY MEASURES
- [ ] Firewall configured
- [ ] Intrusion detection system active
- [ ] Automated backups daily
- [ ] Backup restoration tested
- [ ] Disaster recovery plan documented
- [ ] Incident response plan documented

## H. DOCUMENTATION
- [ ] Privacy policy published (Portuguese)
- [ ] DPIA completed and approved
- [ ] Security policies documented
- [ ] DPO appointed and registered
- [ ] Data processing agreements signed
- [ ] Employee confidentiality agreements signed

## I. TRAINING
- [ ] LGPD training completed (all staff)
- [ ] Security awareness training completed
- [ ] Incident response training completed
- [ ] Training records maintained
- [ ] Annual refresher scheduled

## J. THIRD-PARTY COMPLIANCE
- [ ] Vendor security assessments completed
- [ ] DPAs signed with all processors
- [ ] Vendor compliance verified
- [ ] Data sharing documented
- [ ] Vendor access monitored

---

**Audit Date**: ___/___/______  
**Auditor**: ________________________  
**Result**: [ ] Pass [ ] Fail [ ] Pass with conditions  
**Next Audit**: ___/___/______
```

---

## 9. Incident Response Plan

### Data Breach Response Procedure

```markdown
# PLANO DE RESPOSTA A INCIDENTES DE SEGURANÇA

## FASE 1: DETECÇÃO E CLASSIFICAÇÃO (0-1 hora)

### 1.1 Detecção
**Canais de detecção**:
- Alertas automatizados (monitoring)
- Relatórios de usuários
- Auditorias de segurança
- Terceiros (pesquisadores de segurança)

### 1.2 Classificação de Severidade

| Nível | Descrição | Exemplos |
|-------|-----------|----------|
| **Crítico** | Acesso não autorizado a dados sensíveis de saúde | Vazamento de prontuários |
| **Alto** | Acesso não autorizado a dados pessoais | Vazamento de contatos |
| **Médio** | Tentativa de acesso bloqueada | Ataque DDoS mitigado |
| **Baixo** | Evento de segurança sem impacto | Scan de portas |

### 1.3 Acionamento
**Crítico/Alto**: Acionar DPO e equipe de segurança imediatamente  
**Médio/Baixo**: Registrar e revisar no próximo dia útil

## FASE 2: CONTENÇÃO (1-4 horas)

### 2.1 Ações Imediatas
- [ ] Isolar sistemas afetados
- [ ] Bloquear acessos suspeitos
- [ ] Desativar contas comprometidas
- [ ] Preservar evidências (logs, backups)
- [ ] Documentar todas as ações

### 2.2 Comunicação Interna
- Notificar direção da clínica
- Convocar comitê de crise
- Ativar plano de contingência

## FASE 3: ANÁLISE (4-24 horas)

### 3.1 Investigação
- Determinar causa raiz
- Identificar dados afetados
- Quantificar titulares impactados
- Avaliar risco aos titulares

### 3.2 Documentação
- Linha do tempo do incidente
- Sistemas e dados afetados
- Ações de contenção realizadas
- Evidências coletadas

## FASE 4: NOTIFICAÇÃO (24-72 horas)

### 4.1 Notificação à ANPD
**Prazo**: 72 horas (Art. 48, § 1º LGPD)

**Conteúdo da notificação**:
- Descrição do incidente
- Dados pessoais afetados
- Titulares impactados (quantidade)
- Medidas de contenção
- Riscos aos titulares
- Medidas de mitigação

**Canal**: https://www.gov.br/anpd/pt-br

### 4.2 Notificação aos Titulares
**Quando notificar**:
- Risco relevante aos direitos e liberdades
- Possibilidade de dano patrimonial, moral ou reputacional

**Conteúdo**:
- Descrição clara do incidente
- Dados afetados
- Medidas adotadas
- Recomendações de proteção
- Canais de contato (DPO)

**Canais**:
- E-mail direto
- SMS (casos urgentes)
- Publicação no site (se impossível contato individual)

## FASE 5: REMEDIAÇÃO (1-7 dias)

### 5.1 Correção de Vulnerabilidades
- Aplicar patches de segurança
- Alterar credenciais comprometidas
- Revisar configurações de segurança
- Atualizar regras de firewall

### 5.2 Recuperação
- Restaurar serviços afetados
- Validar integridade dos dados
- Testar funcionalidades
- Monitorar por atividades suspeitas

## FASE 6: DOCUMENTAÇÃO E APRENDIZADO (7-30 dias)

### 6.1 Relatório Pós-Incidente
- Cronologia completa
- Causa raiz
- Impacto aos titulares
- Eficácia da resposta
- Lições aprendidas
- Recomendações

### 6.2 Melhorias
- Atualizar políticas
- Implementar controles adicionais
- Treinar equipe
- Revisar plano de resposta

---

## CONTATOS DE EMERGÊNCIA

**DPO**: [Nome] - [Telefone] - dpo@clinica.com.br  
**TI**: [Nome] - [Telefone] - ti@clinica.com.br  
**Direção**: [Nome] - [Telefone]  
**Advogado**: [Nome] - [Telefone]  
**ANPD**: https://www.gov.br/anpd/pt-br  
**Polícia Federal**: 197
```

---

## 10. Training Materials

### Employee LGPD Training Checklist

```markdown
# TREINAMENTO LGPD - CHECKLIST

## MÓDULO 1: INTRODUÇÃO À LGPD
- [ ] O que é LGPD
- [ ] Por que a LGPD é importante
- [ ] Penalidades por não conformidade
- [ ] Papel de cada colaborador

## MÓDULO 2: CONCEITOS BÁSICOS
- [ ] Dados pessoais vs dados sensíveis
- [ ] Titulares de dados
- [ ] Controlador vs Operador
- [ ] Encarregado (DPO)

## MÓDULO 3: PRINCÍPIOS DA LGPD
- [ ] Finalidade
- [ ] Necessidade
- [ ] Transparência
- [ ] Segurança

## MÓDULO 4: BASES LEGAIS
- [ ] Consentimento
- [ ] Execução de contrato
- [ ] Obrigação legal
- [ ] Legítimo interesse

## MÓDULO 5: DIREITOS DOS TITULARES
- [ ] Acesso aos dados
- [ ] Correção
- [ ] Portabilidade
- [ ] Eliminação

## MÓDULO 6: BOAS PRÁTICAS
- [ ] Como coletar consentimento
- [ ] Como manejar dados sensíveis
- [ ] Quando compartilhar dados
- [ ] Como reportar incidentes

## MÓDULO 7: SEGURANÇA DA INFORMAÇÃO
- [ ] Senhas fortes
- [ ] Autenticação de dois fatores
- [ ] Phishing e engenharia social
- [ ] Uso de dispositivos pessoais

## MÓDULO 8: CASOS PRÁTICOS
- [ ] Cenários do dia a dia
- [ ] Quiz de avaliação
- [ ] Discussão de casos reais

---

**Nome**: ________________________  
**Data**: ___/___/______  
**Assinatura**: ________________________  
**Próxima Reciclagem**: ___/___/______
```

---

**Document Version**: 1.0  
**Last Updated**: October 08, 2025  
**Compliance Status**: ✅ LGPD Ready